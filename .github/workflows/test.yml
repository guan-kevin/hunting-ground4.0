name: Reproducer Test
on: [push, pull_request]

env:
  workflow_ENV_1: Workflow Env 1
  workflow_ENV_2: Workflow Env 2
  workflow_ENV_3: Workflow Env 3

jobs:
  test-all:
    name: Test Reproducer
    runs-on: ubuntu-20.04
    env:
      job_ENV_1: Job Env 1
      job_ENV_2: Job Env 2
      workflow_ENV_2: Job Env 3
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8' 
      - name: Test Environment Variables
        env:
          step_ENV_1: Step Env 1
          job_ENV_2: Step Env 2
          workflow_ENV_3: Step Env 3
        run: |
          if [[ $workflow_ENV_1 != "Workflow Env 1" ]]; then
            echo "Incorrect workflow_ENV_1" && exit 1
          fi
          if [[ $workflow_ENV_2 != "Job Env 3" ]]; then
            echo "Incorrect workflow_ENV_2" && exit 1
          fi
          if [[ $workflow_ENV_3 != "Step Env 3" ]]; then
            echo "Incorrect workflow_ENV_3" && exit 1
          fi
          if [[ $job_ENV_1 != "Job Env 1" ]]; then
            echo "Incorrect job_ENV_1" && exit 1
          fi
          if [[ $job_ENV_2 != "Step Env 2" ]]; then
            echo "Incorrect job_ENV_2" && exit 1
          fi
          if [[ $step_ENV_1 != "Step Env 1" ]]; then
            echo "Incorrect step_ENV_1" && exit 1
          fi
          echo "Test Environment Variables OK!"

  test-defaults:
    name: Test Reproducer (defaults)
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: python
        working-directory: ./python
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8' 
      - name: Test defaults.run.shell and defaults.run.working-directory
        run: |
          import os
          if not os.getcwd().endswith('/python'):
            exit(1);
          print("Test defaults.run.shell and defaults.run.working-directory OK")
      - name: Test Override shell
        run: |
          mkdir shell
          echo "Test Override shell OK"
        shell: bash
      - name: Test override working-directory
        run: |
          if not os.getcwd().endswith('/python/shell'):
            exit(1);
          print("Test working-directory OK")
        working-directory: shell
